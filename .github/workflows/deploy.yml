# Simple workflow for deploying static content to GitHub Pages
name: Deploy nsanamegenerator

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
      
      - name: Check if word buildscript changed
        uses: dorny/paths-filter@v2
        id: checkChanges
        with:
          filters: |
            generateWords-changed:
              - 'generateWords.py'

      - name: Restore cached words
        if: steps.checkChanges.outputs.generateWords-changed != 'true'
        id: cache-words-restore
        uses: actions/cache/restore@v3
        with:
          path: './website/words'
          key: cache-words-${{ steps.date.outputs.date }}

      - name: Generate words
        if: steps.cache-words-restore.outputs.cache-hit != 'true'
        run: python generateWords.py

      - name: Safe words
        if: steps.cache-words-restore.outputs.cache-hit != 'true' || steps.checkChanges.outputs.generateWords-changed != 'true'
        id: cache-words-save
        uses: actions/cache/save@v3
        with:
          path: './website/words'
          #key: ${{ steps.cache-words-restore.outputs.cache-primary-key }}
          key: cache-words-${{ steps.date.outputs.date }}
     
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './website'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
